{
  "id": 3,
    "title": "Cú pháp và quy tắc cơ bản trong Java",
    "excerpt": "Tìm hiểu về cú pháp cơ bản, quy tắc đặt tên, cấu trúc chương trình Java và các quy ước coding trong Java.",
    "content": "<h2>Cú pháp và quy tắc cơ bản trong Java</h2><p>Java có cú pháp rõ ràng và nghiêm ngặt, việc hiểu các quy tắc cơ bản sẽ giúp bạn viết code Java chính xác và dễ đọc.</p><img src=\"https://images.unsplash.com/photo-1461749280684-dccba630e2f6?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\" alt=\"Java Syntax and Code\" style=\"width: 100%; max-width: 600px; height: auto; border-radius: 8px; margin: 20px 0;\"><h3>1. Cấu trúc chương trình Java cơ bản</h3><pre><code>public class TenClass {\n    public static void main(String[] args) {\n        // Code của bạn ở đây\n    }\n}</code></pre><h3>2. Quy tắc đặt tên (Naming Conventions)</h3><h4>Class và Interface:</h4><ul><li>Bắt đầu bằng chữ hoa</li><li>Sử dụng PascalCase</li><li>Ví dụ: <code>StudentManager</code>, <code>UserService</code></li></ul><h4>Method và Variable:</h4><ul><li>Bắt đầu bằng chữ thường</li><li>Sử dụng camelCase</li><li>Ví dụ: <code>getUserName()</code>, <code>studentName</code></li></ul><h4>Constant:</h4><ul><li>Tất cả chữ hoa</li><li>Phân cách bằng dấu gạch dưới</li><li>Ví dụ: <code>MAX_SIZE</code>, <code>PI_VALUE</code></li></ul><h3>3. Các kiểu dữ liệu cơ bản</h3><table><tr><th>Kiểu dữ liệu</th><th>Kích thước</th><th>Phạm vi</th></tr><tr><td>byte</td><td>1 byte</td><td>-128 đến 127</td></tr><tr><td>short</td><td>2 bytes</td><td>-32,768 đến 32,767</td></tr><tr><td>int</td><td>4 bytes</td><td>-2,147,483,648 đến 2,147,483,647</td></tr><tr><td>long</td><td>8 bytes</td><td>-9,223,372,036,854,775,808 đến 9,223,372,036,854,775,807</td></tr><tr><td>float</td><td>4 bytes</td><td>±3.4e-38 đến ±3.4e+38</td></tr><tr><td>double</td><td>8 bytes</td><td>±1.7e-308 đến ±1.7e+308</td></tr><tr><td>boolean</td><td>1 bit</td><td>true hoặc false</td></tr><tr><td>char</td><td>2 bytes</td><td>0 đến 65,535</td></tr></table><h3>4. Khai báo biến</h3><pre><code>// Khai báo biến\nint age = 25;\nString name = \"John\";\nboolean isStudent = true;\n\n// Khai báo nhiều biến cùng kiểu\nint x, y, z;\nint a = 10, b = 20, c = 30;</code></pre><h3>5. Toán tử cơ bản</h3><h4>Toán tử số học:</h4><ul><li><code>+</code> (cộng)</li><li><code>-</code> (trừ)</li><li><code>*</code> (nhân)</li><li><code>/</code> (chia)</li><li><code>%</code> (chia lấy dư)</li></ul><h4>Toán tử so sánh:</h4><ul><li><code>==</code> (bằng)</li><li><code>!=</code> (khác)</li><li><code>&gt;</code> (lớn hơn)</li><li><code>&lt;</code> (nhỏ hơn)</li><li><code>&gt;=</code> (lớn hơn hoặc bằng)</li><li><code>&lt;=</code> (nhỏ hơn hoặc bằng)</li></ul><h3>6. Quy tắc comment</h3><pre><code>// Comment một dòng\n\n/*\n * Comment nhiều dòng\n * Sử dụng cho mô tả chi tiết\n */\n\n/**\n * JavaDoc comment\n * Sử dụng để tạo tài liệu API\n */</code></pre><h3>7. Ví dụ chương trình hoàn chỉnh</h3><pre><code>public class BasicSyntax {\n    public static void main(String[] args) {\n        // Khai báo biến\n        String studentName = \"Nguyễn Văn A\";\n        int age = 20;\n        double gpa = 3.5;\n        \n        // In thông tin\n        System.out.println(\"Tên: \" + studentName);\n        System.out.println(\"Tuổi: \" + age);\n        System.out.println(\"Điểm TB: \" + gpa);\n        \n        // Tính toán\n        int nextYear = age + 1;\n        System.out.println(\"Năm sau: \" + nextYear);\n    }\n}</code></pre><p>Việc tuân thủ các quy tắc cú pháp và naming convention sẽ giúp code Java của bạn dễ đọc, dễ bảo trì và chuyên nghiệp hơn.</p>",
    "author": "Trần Thiện Nhân",
    "date": "2024-01-17",
    "category": "Java Programming",
    "tags": ["Java", "Syntax", "Variables", "Data Types", "Naming Conventions"],
    "viewCount": 0,
    "readTime": "8 phút",
    "featured": true,
    "featuredImage": "https://images.unsplash.com/photo-1461749280684-dccba630e2f6?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80"
}