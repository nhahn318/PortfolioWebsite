{
  "id": 5,
    "title": "Vòng lặp trong Java: for, while, do-while",
    "excerpt": "Tìm hiểu về các loại vòng lặp trong Java: for, while, do-while và cách sử dụng từ khóa break, continue để điều khiển vòng lặp.",
    "content": "<h2>Vòng lặp trong Java</h2><p>Vòng lặp là cấu trúc cho phép thực hiện một khối lệnh nhiều lần. Java cung cấp 3 loại vòng lặp chính: for, while, và do-while.</p><h3>1. Vòng lặp for</h3><h4>Cú pháp:</h4><pre><code>for (khởi_tạo; điều_kiện; cập_nhật) {\n    // Code thực hiện\n}</code></pre><h4>Ví dụ cơ bản:</h4><pre><code>public class ForLoopExample {\n    public static void main(String[] args) {\n        // In số từ 1 đến 10\n        for (int i = 1; i <= 10; i++) {\n            System.out.println(\"Số: \" + i);\n        }\n        \n        // Tính tổng từ 1 đến 100\n        int sum = 0;\n        for (int i = 1; i <= 100; i++) {\n            sum += i;\n        }\n        System.out.println(\"Tổng từ 1 đến 100: \" + sum);\n    }\n}</code></pre><h4>Vòng lặp for nâng cao:</h4><pre><code>// Vòng lặp lồng nhau - Bảng cửu chương\nfor (int i = 1; i <= 9; i++) {\n    for (int j = 1; j <= 9; j++) {\n        System.out.printf(\"%d x %d = %d\\t\", i, j, i * j);\n    }\n    System.out.println(); // Xuống dòng\n}\n\n// Vòng lặp ngược\nfor (int i = 10; i >= 1; i--) {\n    System.out.println(\"Đếm ngược: \" + i);\n}</code></pre><h3>2. Vòng lặp while</h3><h4>Cú pháp:</h4><pre><code>while (điều_kiện) {\n    // Code thực hiện\n}</code></pre><h4>Ví dụ thực tế:</h4><pre><code>public class WhileLoopExample {\n    public static void main(String[] args) {\n        // Đếm số chữ số của một số\n        int number = 12345;\n        int count = 0;\n        int temp = number;\n        \n        while (temp != 0) {\n            temp /= 10;\n            count++;\n        }\n        System.out.println(\"Số \" + number + \" có \" + count + \" chữ số\");\n        \n        // Tìm ước chung lớn nhất (GCD)\n        int a = 48, b = 18;\n        while (b != 0) {\n            int temp = b;\n            b = a % b;\n            a = temp;\n        }\n        System.out.println(\"Ước chung lớn nhất: \" + a);\n    }\n}</code></pre><h3>3. Vòng lặp do-while</h3><h4>Cú pháp:</h4><pre><code>do {\n    // Code thực hiện\n} while (điều_kiện);</code></pre><h4>Ví dụ thực tế:</h4><pre><code>import java.util.Scanner;\n\npublic class DoWhileExample {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int choice;\n        \n        do {\n            System.out.println(\"\\n=== MENU ===\");\n            System.out.println(\"1. Tính tổng hai số\");\n            System.out.println(\"2. Tính giai thừa\");\n            System.out.println(\"3. Kiểm tra số nguyên tố\");\n            System.out.println(\"0. Thoát\");\n            System.out.print(\"Chọn chức năng: \");\n            \n            choice = scanner.nextInt();\n            \n            switch (choice) {\n                case 1:\n                    System.out.print(\"Nhập số thứ nhất: \");\n                    int a = scanner.nextInt();\n                    System.out.print(\"Nhập số thứ hai: \");\n                    int b = scanner.nextInt();\n                    System.out.println(\"Tổng: \" + (a + b));\n                    break;\n                case 2:\n                    System.out.print(\"Nhập số: \");\n                    int n = scanner.nextInt();\n                    long factorial = 1;\n                    for (int i = 1; i <= n; i++) {\n                        factorial *= i;\n                    }\n                    System.out.println(n + \"! = \" + factorial);\n                    break;\n                case 3:\n                    System.out.print(\"Nhập số: \");\n                    int num = scanner.nextInt();\n                    boolean isPrime = true;\n                    for (int i = 2; i <= Math.sqrt(num); i++) {\n                        if (num % i == 0) {\n                            isPrime = false;\n                            break;\n                        }\n                    }\n                    System.out.println(num + (isPrime ? \" là số nguyên tố\" : \" không phải số nguyên tố\"));\n                    break;\n                case 0:\n                    System.out.println(\"Cảm ơn bạn đã sử dụng!\");\n                    break;\n                default:\n                    System.out.println(\"Lựa chọn không hợp lệ!\");\n            }\n        } while (choice != 0);\n        \n        scanner.close();\n    }\n}</code></pre><h3>4. Từ khóa break và continue</h3><h4>break - Thoát khỏi vòng lặp:</h4><pre><code>// Tìm số nguyên tố đầu tiên trong khoảng\nfor (int i = 2; i <= 100; i++) {\n    boolean isPrime = true;\n    for (int j = 2; j <= Math.sqrt(i); j++) {\n        if (i % j == 0) {\n            isPrime = false;\n            break; // Thoát khỏi vòng lặp trong\n        }\n    }\n    if (isPrime) {\n        System.out.println(\"Số nguyên tố đầu tiên: \" + i);\n        break; // Thoát khỏi vòng lặp ngoài\n    }\n}</code></pre><h4>continue - Bỏ qua lần lặp hiện tại:</h4><pre><code>// In số lẻ từ 1 đến 20\nfor (int i = 1; i <= 20; i++) {\n    if (i % 2 == 0) {\n        continue; // Bỏ qua số chẵn\n    }\n    System.out.println(\"Số lẻ: \" + i);\n}</code></pre><h3>5. Enhanced for loop (for-each)</h3><pre><code>// Duyệt mảng\nint[] numbers = {1, 2, 3, 4, 5};\nfor (int number : numbers) {\n    System.out.println(\"Số: \" + number);\n}\n\n// Duyệt chuỗi\nString text = \"Hello World\";\nfor (char c : text.toCharArray()) {\n    System.out.println(\"Ký tự: \" + c);\n}</code></pre><h3>6. Bài tập thực hành</h3><h4>Bài 1: Vẽ tam giác số</h4><pre><code>public class TrianglePattern {\n    public static void main(String[] args) {\n        int rows = 5;\n        \n        for (int i = 1; i <= rows; i++) {\n            // In khoảng trắng\n            for (int j = 1; j <= rows - i; j++) {\n                System.out.print(\" \");\n            }\n            // In số\n            for (int k = 1; k <= i; k++) {\n                System.out.print(k + \" \");\n            }\n            System.out.println();\n        }\n    }\n}</code></pre><h4>Bài 2: Tính số Fibonacci</h4><pre><code>public class Fibonacci {\n    public static void main(String[] args) {\n        int n = 10;\n        int a = 0, b = 1;\n        \n        System.out.print(\"Dãy Fibonacci: \");\n        for (int i = 0; i < n; i++) {\n            System.out.print(a + \" \");\n            int temp = a + b;\n            a = b;\n            b = temp;\n        }\n    }\n}</code></pre><h3>7. Lưu ý quan trọng</h3><ul><li><strong>for:</strong> Khi biết trước số lần lặp</li><li><strong>while:</strong> Khi điều kiện có thể thay đổi trong vòng lặp</li><li><strong>do-while:</strong> Khi cần thực hiện ít nhất một lần</li><li><strong>Vòng lặp vô hạn:</strong> Cẩn thận với điều kiện để tránh infinite loop</li><li><strong>Performance:</strong> for-each nhanh hơn for thông thường với mảng</li></ul><p>Việc hiểu và sử dụng đúng các loại vòng lặp sẽ giúp bạn viết code Java hiệu quả và dễ đọc hơn.</p>",
    "author": "Trần Thiện Nhân",
    "date": "2024-01-19",
    "category": "Java Programming",
    "tags": ["Java", "Loops", "For Loop", "While Loop", "Do-While", "Break", "Continue"],
    "viewCount": 0,
    "readTime": "12 phút",
    "featured": true,
    "featuredImage": "https://images.unsplash.com/photo-1516116216624-53e697fedbea?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80"
}