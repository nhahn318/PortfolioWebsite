{
    "id": 6,
    "title": "Mảng và chuỗi trong Java",
    "excerpt": "Tìm hiểu về cách khai báo, khởi tạo và thao tác với mảng một chiều, hai chiều và chuỗi (String) trong Java.",
    "content": "<h2>Mảng và chuỗi trong Java</h2><p>Mảng và chuỗi là các cấu trúc dữ liệu cơ bản và quan trọng trong Java, được sử dụng rộng rãi trong lập trình.</p><h3>1. Mảng một chiều (Array)</h3><h4>Khai báo và khởi tạo:</h4><pre><code>// Cách 1: Khai báo rồi khởi tạo\nint[] numbers = new int[5]; // Mảng 5 phần tử\n\n// Cách 2: Khởi tạo với giá trị\nint[] scores = {85, 92, 78, 96, 88};\n\n// Cách 3: Khai báo rồi gán giá trị\nint[] ages = new int[3];\nages[0] = 20;\nages[1] = 25;\nages[2] = 30;</code></pre><h4>Ví dụ thực tế:</h4><pre><code>public class ArrayExample {\n    public static void main(String[] args) {\n        // Tìm giá trị lớn nhất trong mảng\n        int[] numbers = {45, 23, 67, 12, 89, 34};\n        int max = numbers[0];\n        \n        for (int i = 1; i < numbers.length; i++) {\n            if (numbers[i] > max) {\n                max = numbers[i];\n            }\n        }\n        System.out.println(\"Giá trị lớn nhất: \" + max);\n        \n        // Tính trung bình cộng\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        double average = (double) sum / numbers.length;\n        System.out.println(\"Trung bình cộng: \" + average);\n    }\n}</code></pre><h3>2. Mảng hai chiều (2D Array)</h3><h4>Khai báo và khởi tạo:</h4><pre><code>// Cách 1: Khai báo rồi khởi tạo\nint[][] matrix = new int[3][4]; // Ma trận 3x4\n\n// Cách 2: Khởi tạo với giá trị\nint[][] grid = {\n    {1, 2, 3},\n    {4, 5, 6},\n    {7, 8, 9}\n};\n\n// Cách 3: Mảng không đều (Jagged Array)\nint[][] jagged = new int[3][];\njagged[0] = new int[2];\njagged[1] = new int[3];\njagged[2] = new int[4];</code></pre><h4>Ví dụ thực tế:</h4><pre><code>public class MatrixExample {\n    public static void main(String[] args) {\n        // Tạo ma trận điểm sinh viên\n        int[][] studentScores = {\n            {85, 92, 78}, // Sinh viên 1\n            {96, 88, 91}, // Sinh viên 2\n            {76, 89, 94}  // Sinh viên 3\n        };\n        \n        // In ma trận\n        System.out.println(\"Bảng điểm sinh viên:\");\n        for (int i = 0; i < studentScores.length; i++) {\n            System.out.print(\"SV\" + (i+1) + \": \");\n            for (int j = 0; j < studentScores[i].length; j++) {\n                System.out.print(studentScores[i][j] + \"\\t\");\n            }\n            System.out.println();\n        }\n        \n        // Tính điểm trung bình của từng sinh viên\n        for (int i = 0; i < studentScores.length; i++) {\n            int sum = 0;\n            for (int j = 0; j < studentScores[i].length; j++) {\n                sum += studentScores[i][j];\n            }\n            double average = (double) sum / studentScores[i].length;\n            System.out.println(\"Điểm TB SV\" + (i+1) + \": \" + average);\n        }\n    }\n}</code></pre><h3>3. Chuỗi (String) trong Java</h3><h4>Khai báo và thao tác cơ bản:</h4><pre><code>// Khai báo chuỗi\nString name = \"Nguyễn Văn A\";\nString message = new String(\"Hello World\");\n\n// Nối chuỗi\nString firstName = \"Nguyễn\";\nString lastName = \"Văn A\";\nString fullName = firstName + \" \" + lastName;\n\n// Sử dụng StringBuilder cho hiệu suất tốt hơn\nStringBuilder sb = new StringBuilder();\nsb.append(\"Hello\");\nsb.append(\" \");\nsb.append(\"World\");\nString result = sb.toString();</code></pre><h4>Các phương thức quan trọng của String:</h4><pre><code>public class StringExample {\n    public static void main(String[] args) {\n        String text = \"  Hello World  \";\n        \n        // Độ dài chuỗi\n        System.out.println(\"Độ dài: \" + text.length());\n        \n        // Loại bỏ khoảng trắng đầu và cuối\n        String trimmed = text.trim();\n        System.out.println(\"Sau trim: '\" + trimmed + \"'\");\n        \n        // Chuyển thành chữ hoa/thường\n        System.out.println(\"Chữ hoa: \" + text.toUpperCase());\n        System.out.println(\"Chữ thường: \" + text.toLowerCase());\n        \n        // Kiểm tra bắt đầu/kết thúc\n        System.out.println(\"Bắt đầu với 'Hello': \" + text.startsWith(\"Hello\"));\n        System.out.println(\"Kết thúc với 'World': \" + text.endsWith(\"World\"));\n        \n        // Tìm vị trí ký tự\n        int index = text.indexOf(\"World\");\n        System.out.println(\"Vị trí 'World': \" + index);\n        \n        // Cắt chuỗi\n        String[] words = text.trim().split(\" \");\n        System.out.println(\"Số từ: \" + words.length);\n        for (String word : words) {\n            System.out.println(\"Từ: \" + word);\n        }\n    }\n}</code></pre><h3>4. Bài tập thực hành</h3><h4>Bài 1: Sắp xếp mảng</h4><pre><code>public class ArraySort {\n    public static void main(String[] args) {\n        int[] numbers = {64, 34, 25, 12, 22, 11, 90};\n        \n        System.out.println(\"Mảng ban đầu:\");\n        printArray(numbers);\n        \n        // Sắp xếp bubble sort\n        for (int i = 0; i < numbers.length - 1; i++) {\n            for (int j = 0; j < numbers.length - i - 1; j++) {\n                if (numbers[j] > numbers[j + 1]) {\n                    // Hoán đổi\n                    int temp = numbers[j];\n                    numbers[j] = numbers[j + 1];\n                    numbers[j + 1] = temp;\n                }\n            }\n        }\n        \n        System.out.println(\"Mảng sau sắp xếp:\");\n        printArray(numbers);\n    }\n    \n    public static void printArray(int[] arr) {\n        for (int i = 0; i < arr.length; i++) {\n            System.out.print(arr[i] + \" \");\n        }\n        System.out.println();\n    }\n}</code></pre><h4>Bài 2: Đếm từ trong chuỗi</h4><pre><code>public class WordCount {\n    public static void main(String[] args) {\n        String text = \"Java is a programming language. Java is object-oriented.\";\n        \n        // Chuyển thành chữ thường và loại bỏ dấu câu\n        text = text.toLowerCase().replaceAll(\"[^a-zA-Z\\\\s]\", \"\");\n        \n        // Tách thành từ\n        String[] words = text.split(\"\\\\s+\");\n        \n        // Đếm số lần xuất hiện của từng từ\n        java.util.Map&lt;String, Integer&gt; wordCount = new java.util.HashMap&lt;&gt;();\n        \n        for (String word : words) {\n            if (!word.isEmpty()) {\n                wordCount.put(word, wordCount.getOrDefault(word, 0) + 1);\n            }\n        }\n        \n        // In kết quả\n        System.out.println(\"Số lần xuất hiện của từng từ:\");\n        for (java.util.Map.Entry&lt;String, Integer&gt; entry : wordCount.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}</code></pre><h3>5. Lưu ý quan trọng</h3><ul><li><strong>Mảng:</strong> Kích thước cố định, khởi tạo với giá trị mặc định</li><li><strong>String:</strong> Immutable (không thể thay đổi), sử dụng StringBuilder cho thao tác nhiều</li><li><strong>Index:</strong> Bắt đầu từ 0, cẩn thận với ArrayIndexOutOfBoundsException</li><li><strong>Performance:</strong> Mảng nhanh hơn ArrayList cho dữ liệu nguyên thủy</li><li><strong>Memory:</strong> Mảng hai chiều thực chất là mảng của mảng</li></ul><p>Việc hiểu và sử dụng đúng mảng và chuỗi sẽ giúp bạn xử lý dữ liệu hiệu quả trong Java.</p>",
    "author": "Trần Thiện Nhân",
    "date": "2024-01-20",
    "category": "Java Programming",
    "tags": ["Java", "Arrays", "Strings", "2D Arrays", "String Methods"],
    "viewCount": 0,
    "readTime": "15 phút",
    "featured": true,
    "featuredImage": "https://images.unsplash.com/photo-1555949963-aa79dcee981c?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80"
}